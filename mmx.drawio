<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36" version="24.7.14">
  <diagram id="C5RBs43oDa-KdzZeNtuy" name="Page-1">
    <mxGraphModel dx="989" dy="622" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="20000" pageHeight="2000" math="0" shadow="0">
      <root>
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-1" parent="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-73" value="" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1380" y="279" width="600" height="941" as="geometry" />
        </mxCell>
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-2" value="" style="rounded=0;html=1;jettySize=auto;orthogonalLoop=1;fontSize=11;endArrow=block;endFill=0;endSize=8;strokeWidth=1;shadow=0;labelBackgroundColor=none;edgeStyle=orthogonalEdgeStyle;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="WIyWlLk6GJQsqaUBKTNV-3" target="WIyWlLk6GJQsqaUBKTNV-6" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-3" value="gets configs&lt;div&gt;pipeline classes&lt;/div&gt;&lt;div&gt;runs the pipeline&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;glass=0;strokeWidth=1;shadow=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="160" y="79" width="120" height="70" as="geometry" />
        </mxCell>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-9" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="WIyWlLk6GJQsqaUBKTNV-6" target="WIyWlLk6GJQsqaUBKTNV-7">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="220" y="329" />
              <mxPoint x="310" y="329" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-6" value="Which&lt;div&gt;&amp;nbsp;pipeline?&amp;nbsp;&lt;/div&gt;" style="rhombus;whiteSpace=wrap;html=1;shadow=0;fontFamily=Helvetica;fontSize=12;align=center;strokeWidth=1;spacing=6;spacingTop=-4;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="170" y="189" width="100" height="80" as="geometry" />
        </mxCell>
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-7" value="" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;glass=0;strokeWidth=1;shadow=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="120" y="389" width="300" height="530" as="geometry" />
        </mxCell>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-4" value="RUN.py" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="160" y="49" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-8" value="&lt;font style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; font-size: 16px;&quot;&gt;ResponseModelPipeline&lt;/font&gt;&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;div style=&quot;forced-color-adjust: none; text-align: left;&quot;&gt;&lt;span style=&quot;forced-color-adjust: none; white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; text-align: left;&quot;&gt;&lt;span style=&quot;forced-color-adjust: none; white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;- Load + Preprocess/clean data&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - Data grain via regression: Brick -&amp;gt; HCP&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - Feature engineering (feature builders)&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - Bayesian Response model&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - Post processing&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - Save outputs&lt;/div&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="134" y="419" width="280" height="140" as="geometry" />
        </mxCell>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-11" value="__INIT__" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="150" y="584" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-12" value="&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- gets congfigs&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- starts :&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;a) data_manager&lt;/div&gt;&lt;div&gt;b) experiment_tracker&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="150" y="614" width="140" height="75" as="geometry" />
        </mxCell>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-16" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;__call__():&lt;/font&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;self.data_loading&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;self.update_data_dict_with_missing_levels()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;result_df = self.generate_response_curve()&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;self.save_results(result_df)&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="150" y="719" width="260" height="160" as="geometry" />
        </mxCell>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-17" value="&lt;font style=&quot;font-size: 19px;&quot;&gt;run_pipeline.py&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="200" y="359" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-56" value="" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="540" y="339" width="315" height="350" as="geometry" />
        </mxCell>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-57" value="generate_response_curve" style="text;whiteSpace=wrap;fontSize=16;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="562.5" y="359" width="270" height="40" as="geometry" />
        </mxCell>
        <UserObject label="" link="save_file(&quot;output/features_df.csv&quot;&#xa;save_file(&quot;output/normalized_features_df.csv&quot;&#xa;save_file(&quot;output/region_index_df.csv&quot;" id="fa4uJrr_QhnZvR9-6Muc-61">
          <mxCell style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" target="fa4uJrr_QhnZvR9-6Muc-56">
            <mxGeometry x="-0.0007" relative="1" as="geometry">
              <mxPoint x="397" y="838" as="sourcePoint" />
              <mxPoint x="320" y="399" as="targetPoint" />
              <Array as="points">
                <mxPoint x="480" y="838" />
                <mxPoint x="480" y="289" />
                <mxPoint x="698" y="289" />
              </Array>
              <mxPoint as="offset" />
            </mxGeometry>
          </mxCell>
        </UserObject>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-62" value="print_preprocessing_plots (plots )&lt;div&gt;print_correlations.&amp;nbsp; (plots heatmaps)&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;response = self.bayesian_modeling()&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;lambda_adstocks[channel_code] = response[1]&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;uplift_computation&amp;nbsp;= StanUpliftComputation&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;rsp_model_op = ResponseModelOutput()&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;rsp_response = rsp_model_op.run()&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;return result_df&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="547.5" y="389" width="300" height="270" as="geometry" />
        </mxCell>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-64" value="" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="880" y="279" width="450" height="260" as="geometry" />
        </mxCell>
        <UserObject label="  &#xa;response = run_bayesian_model. &#xa;     (  from all_channel_features df, gets :&#xa;          features_df,        normalized_features_df,&#xa;          transformation_params,&#xa;          channel_code  )&#xa;&#xa;&#xa;save_file(&quot;output/features_df.csv&quot;)&#xa;&#xa;&#xa;save_file(&quot;output/normalized_features_df.csv&quot;)&#xa;&#xa;save_file(&quot;output/region_index_df.csv&quot;)&#xa;     &#xa; return response" link="response = run_bayesian_model(&#xa;            all_channel_features[channel_code].features_df,&#xa;            all_channel_features[channel_code].normalized_features_df,&#xa;            all_channel_features[channel_code].transformation_params,&#xa;            all_channel_features[channel_code].channel_code,&#xa;            self.config,&#xa;            self.experiment_tracker,&#xa;            level,&#xa;        )&#xa;&#xa;&#xa;        save_file(&#xa;            data=all_channel_features[channel_code].features_df,&#xa;            file_name=f&#39;{&quot;output/features_df.csv&quot;}&#39;,&#xa;            experiment_tracker=self.experiment_tracker,&#xa;            mlflow_directory=channel_code&#xa;            if level is None&#xa;            else osp.join(level[&quot;speciality&quot;], level[&quot;segment_code&quot;], level[&quot;segment_value&quot;]),&#xa;        )&#xa;        save_file(&#xa;            data=all_channel_features[channel_code].normalized_features_df,&#xa;            file_name=f&#39;{&quot;output/normalized_features_df.csv&quot;}&#39;,&#xa;            experiment_tracker=self.experiment_tracker,&#xa;            mlflow_directory=channel_code&#xa;            if level is None&#xa;            else osp.join(level[&quot;speciality&quot;], level[&quot;segment_code&quot;], level[&quot;segment_value&quot;]),&#xa;        )&#xa;        save_file(&#xa;            data=response[0].region_index_df,&#xa;            file_name=f&#39;{&quot;output/region_index_df.csv&quot;}&#39;,&#xa;            experiment_tracker=self.experiment_tracker,&#xa;            mlflow_directory=channel_code&#xa;            if level is None&#xa;            else osp.join(level[&quot;speciality&quot;], level[&quot;segment_code&quot;], level[&quot;segment_value&quot;]),&#xa;        )&#xa;        return response" id="fa4uJrr_QhnZvR9-6Muc-63">
          <mxCell style="text;whiteSpace=wrap;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
            <mxGeometry x="940" y="299" width="380" height="240" as="geometry" />
          </mxCell>
        </UserObject>
        <UserObject label="" id="fa4uJrr_QhnZvR9-6Muc-66">
          <mxCell style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;exitX=0.708;exitY=0.222;exitDx=0;exitDy=0;exitPerimeter=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="fa4uJrr_QhnZvR9-6Muc-62" target="fa4uJrr_QhnZvR9-6Muc-64">
            <mxGeometry x="-0.0007" relative="1" as="geometry">
              <mxPoint x="850" y="779" as="sourcePoint" />
              <mxPoint x="1240.5" y="429.47" as="targetPoint" />
              <Array as="points">
                <mxPoint x="850" y="449" />
                <mxPoint x="850" y="229" />
                <mxPoint x="1105" y="229" />
              </Array>
              <mxPoint as="offset" />
            </mxGeometry>
          </mxCell>
        </UserObject>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-68" value=" &#xa; Function that fits and generate relevant predictions with the bayesian model&#xa;&#xa;    Returns:&#xa;        - samples_full_df: df with the samples of all relevant parameters from the  bayesian model, which are needed in the response curve generation&#xa;&#xa;&#xa;        - bayesian_model_indexes (MappingIndexes): in the bayesian model&#xa;        code to the corresponding business values &#xa;&#xa;&#xa;&#xa;&#xa;&#xa;" style="text;whiteSpace=wrap;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1420" y="379" width="400" height="191" as="geometry" />
        </mxCell>
        <UserObject label="src/response_curve/modeling.py" link="src/response_curve/modeling.py" id="fa4uJrr_QhnZvR9-6Muc-69">
          <mxCell style="text;whiteSpace=wrap;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
            <mxGeometry x="1400" y="249" width="210" height="40" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-70" value="&lt;font style=&quot;font-size: 19px;&quot;&gt;run_pipeline.py&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="590" y="309" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-71" value="&lt;font style=&quot;font-size: 19px;&quot;&gt;run_pipeline.py&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="970" y="249" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-72" value="&lt;font color=&quot;#33ffc9&quot; style=&quot;font-size: 15px;&quot;&gt;&lt;span style=&quot;font-family: Helvetica; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&amp;nbsp;def bayesian_modeling:&lt;/span&gt;&lt;br style=&quot;forced-color-adjust: none; padding: 0px; margin: 0px; font-family: Helvetica; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;forced-color-adjust: none; padding: 0px; margin: 0px; font-family: Helvetica; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="900" y="289" width="230" height="50" as="geometry" />
        </mxCell>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-74" value="&lt;div style=&quot;forced-color-adjust: none; padding: 0px; margin: 0px; font-family: Helvetica; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; font-size: 15px;&quot;&gt;&lt;font color=&quot;#33ff99&quot; style=&quot;font-size: 15px;&quot;&gt;def run_bayesian_model(&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; padding: 0px; margin: 0px; font-family: Helvetica; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; font-size: 15px;&quot;&gt;&lt;font color=&quot;#33ff99&quot; style=&quot;font-size: 15px;&quot;&gt;&amp;nbsp; &amp;nbsp; features_df, normalized_features_df,transformation_params,&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; padding: 0px; margin: 0px; font-family: Helvetica; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; font-size: 15px;&quot;&gt;&lt;font color=&quot;#33ff99&quot; style=&quot;font-size: 15px;&quot;&gt;&amp;nbsp; &amp;nbsp; channel_code, config, experiment_tracker, levels&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; padding: 0px; margin: 0px; font-family: Helvetica; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; font-size: 15px;&quot;&gt;&lt;font color=&quot;#33ff99&quot; style=&quot;font-size: 15px;&quot;&gt;):&lt;/font&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1420" y="299" width="480" height="80" as="geometry" />
        </mxCell>
        <UserObject label="# &lt;&lt; (1) INITIALIZATION: BayesianResponseModel&gt;&gt;&#xa;        stan_model_file_list = config.get(&quot;STAN_MODEL_FILE&quot;)&#xa;    if config.get(&quot;USE_BUILDER&quot;):&#xa;        sb = StanBuilder(channel_code, config)&#xa;        sb.build_and_save_model(stan_model_file)&#xa;&#xa;&#xa;    bayesian_model = BayesianResponseModel()&#xa;&#xa;&#xa;    # &lt;&lt; (2) MODEL INPUT CREATION &gt;&gt;&#xa;    bayesian_model.create_data_input()&#xa;&#xa;&#xa;    # &lt;&lt; (3) MODEL COMPILATION: BayesianResponseModel &gt;&gt;&#xa;    bayesian_model.compile_model()&#xa;&#xa;&#xa;    # &lt;&lt; (4) MODEL TRAINING: BayesianResponseModel &gt;&gt;&#xa;    bayesian_model.train_model()&#xa;&#xa;&#xa;    # Compute sample and mean_adstock&#xa;    samples_df = bayesian_model.fit.draws_pd()&#xa;&#xa;&#xa;    # &lt;&lt; (5) POST PROCESSSING: BayesianResponseModel&gt;&gt;  - Check the A&amp;P Code in Details since this is a part of it.&#xa;  &#xa;    model_post_process = BayesianPostProcess()&#xa;    model_post_process.run_post_processing()&#xa;    return (&#xa;        bayesian_model.indexes,&#xa;        lambda_adstock,&#xa;        bayesian_model,&#xa;        params_summary_df,&#xa;    )" link="# &lt;&lt; (1) INITIALIZATION: BayesianResponseModel&gt;&gt;&#xa;        stan_model_file_list = config.get(&quot;STAN_MODEL_FILE&quot;)&#xa;    if config.get(&quot;USE_BUILDER&quot;):&#xa;        sb = StanBuilder(channel_code, config)&#xa;        sb.build_and_save_model(stan_model_file)&#xa;&#xa;&#xa;    bayesian_model = BayesianResponseModel()&#xa;&#xa;&#xa;    # &lt;&lt; (2) MODEL INPUT CREATION &gt;&gt;&#xa;    bayesian_model.create_data_input()&#xa;&#xa;&#xa;    # &lt;&lt; (3) MODEL COMPILATION: BayesianResponseModel &gt;&gt;&#xa;    bayesian_model.compile_model()&#xa;&#xa;&#xa;    # &lt;&lt; (4) MODEL TRAINING: BayesianResponseModel &gt;&gt;&#xa;    bayesian_model.train_model()&#xa;&#xa;&#xa;    # Compute sample and mean_adstock&#xa;    samples_df = bayesian_model.fit.draws_pd()&#xa;&#xa;&#xa;    # &lt;&lt; (5) POST PROCESSSING: BayesianResponseModel&gt;&gt;  - Check the A&amp;P Code in Details since this is a part of it.&#xa;  &#xa;    model_post_process = BayesianPostProcess()&#xa;    model_post_process.run_post_processing()&#xa;    return (&#xa;        bayesian_model.indexes,&#xa;        lambda_adstock,&#xa;        bayesian_model,&#xa;        params_summary_df,&#xa;    )" id="fa4uJrr_QhnZvR9-6Muc-75">
          <mxCell style="text;whiteSpace=wrap;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
            <mxGeometry x="1390" y="590" width="560" height="560" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-76" value="using &#xa;cmdstanpy.CmdStanModel&#xa;returns the CODE of model as str" style="text;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1780" y="740" width="180" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-77" value="&lt;div&gt;calculates (uses sample)&lt;span style=&quot;background-color: initial;&quot;&gt;(MCMC)&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;sampling from the posterior distribution&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;returns an&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;CmdStanMCMC object with all info&lt;/span&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1750" y="815" width="220" height="75" as="geometry" />
        </mxCell>
        <mxCell id="fa4uJrr_QhnZvR9-6Muc-79" value="method is used to extract the posterior samples (or draws) from a fitted model in the form of a &lt;strong&gt;Pandas DataFrame&lt;/strong&gt;" style="text;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1680" y="910" width="270" height="50" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
